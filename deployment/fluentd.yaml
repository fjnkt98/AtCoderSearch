apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
spec:
  selector:
    matchLabels:
      name: fluentd
  template:
    metadata:
      labels:
        name: fluentd
    spec:
      containers:
        - name: fluentd
          image: fluent/fluentd-kubernetes-daemonset:v1.16-debian-s3-amd64-1
          env:
            - name: S3_BUCKET_NAME
              value: atcoder-search-log
            - name: FLUENTD_SYSTEMD_CONF
              value: disable
            - name: AWS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-s3-auth
                  key: aws-key-id
            - name: AWS_SEC_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-s3-auth
                  key: aws-sec-key
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
            limits:
              memory: 1Gi
          volumeMounts:
            - name: config-volume
              mountPath: /fluentd/etc/
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
      volumes:
        - name: config-volume
          configMap:
            name: fluentd-config
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
data:
  fluent.conf: |
    ##############################################################################
    # Backend API server container log configurations
    ##############################################################################
    <source>
      @type tail
      path "/var/log/containers/*_backend-*.log"
      pos_file /var/log/backend.log.pos
      tag backend
      read_from_head true
      <parse>
        @type regexp
        expression /^(?<kubetime>[^ ]*) (?<stream>stdout|stderr) . (?<log>.*)$/
      </parse>
    </source>

    <filter backend>
      @type record_transformer
      enable_ruby
      <record>
        log ${record["log"].strip}
      </record>
    </filter>

    <filter backend>
      @type parser
      key_name log
      <parse>
        @type json
        time_key time
        time_format %Y-%m-%dT%H:%M:%S.%N%:z
        keep_time_key true
      </parse>
    </filter>

    <match backend>
      @type s3
      format json
      aws_key_id "#{ENV['AWS_KEY_ID']}"
      aws_sec_key "#{ENV['AWS_SEC_KEY']}"
      check_apikey_on_start false
      s3_bucket "#{ENV['S3_BUCKET_NAME']}"
      s3_region ap-northeast-1
      s3_object_key_format "${tag[0]}-log/%{time_slice}/${tag[0]}-%{index}.log.%{file_extension}"
      time_slice_format %Y/%m/%d
      <buffer tag,time>
        @type file
        path "/var/log/fluentd-buffers/backend/s3.buffer"
        timekey 3600
        timekey_wait 10m
        timekey_use_utc false
        timekey_zone Asia/Tokyo
        chunk_limit_size 1G
        flush_at_shutdown true
      </buffer>
    </match>

    ##############################################################################
    # Frontend web-server container log configurations
    ##############################################################################
    <source>
      @type tail
      path "/var/log/containers/*_frontend-*.log"
      pos_file /var/log/frontend.log.pos
      tag frontend
      read_from_head true
      <parse>
        @type multiline
        format_firstline /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.?\d{0,9}[+-]\d{2}:\d{2} (stdout|stderr) . [^\s\}]/
        format1 /^(?<kubetime>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.?\d{0,9}[+-]\d{2}:\d{2}) (?<stream>stdout|stderr) . (?<log>.+)$/
        time_key kubetime
        keep_time_key true
      </parse>
    </source>

    <filter frontend>
      @type record_transformer
      enable_ruby
      remove_keys kubetime
      <record>
        log ${record["log"].gsub(/\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.?\d{0,9}[+-]\d{2}:\d{2} (stdout|stderr) . /, "").strip}
      </record>
    </filter>

    <match frontend>
      @type s3
      aws_key_id "#{ENV['AWS_KEY_ID']}"
      aws_sec_key "#{ENV['AWS_SEC_KEY']}"
      check_apikey_on_start false
      s3_bucket "#{ENV['S3_BUCKET_NAME']}"
      s3_region ap-northeast-1
      s3_object_key_format "${tag[0]}-log/%{time_slice}/${tag[0]}-%{index}.log.%{file_extension}"
      time_slice_format %Y/%m/%d
      <buffer tag,time>
        @type file
        path "/var/log/fluentd-buffers/frontend/s3.buffer"
        timekey 3600
        timekey_wait 10m
        timekey_use_utc false
        timekey_zone Asia/Tokyo
        chunk_limit_size 1G
        flush_at_shutdown true
      </buffer>
    </match>

    ##############################################################################
    # Solr container log configurations
    ##############################################################################
    <source>
      @type tail
      path "/var/log/containers/*_solr-*.log"
      pos_file /var/log/solr.log.pos
      tag solr
      read_from_head true
      <parse>
        @type multiline
        format_firstline /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.?\d{0,9}[+-]\d{2}:\d{2} (stdout|stderr) . \d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.?\d{0,9}/
        format1 /^(?<kubetime>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.?\d{0,9}[+-]\d{2}:\d{2}) (?<stream>stdout|stderr) . (?<time>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.?\d{0,9}) (?<level>[^\s]+) (?<log>.+)$/
        time_key time
        keep_time_key true
      </parse>
    </source>

    <filter solr>
      @type record_transformer
      enable_ruby
      remove_keys kubetime
      <record>
        log ${record["log"].gsub(/\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.?\d{0,9}[+-]\d{2}:\d{2} (stdout|stderr) . /, "").strip}
      </record>
    </filter>

    <match solr>
      @type s3
      format out_file
      aws_key_id "#{ENV['AWS_KEY_ID']}"
      aws_sec_key "#{ENV['AWS_SEC_KEY']}"
      check_apikey_on_start false
      s3_bucket "#{ENV['S3_BUCKET_NAME']}"
      s3_region ap-northeast-1
      s3_object_key_format "${tag[0]}-log/%{time_slice}/${tag[0]}-%{index}.log.%{file_extension}"
      time_slice_format %Y/%m/%d
      <buffer tag,time>
        @type file
        path "/var/log/fluentd-buffers/solr/s3.buffer"
        timekey 3600
        timekey_wait 10m
        timekey_use_utc false
        timekey_zone Asia/Tokyo
        chunk_limit_size 1G
        flush_at_shutdown true
      </buffer>
    </match>

    ##############################################################################
    # PostgreSQL container log configurations
    ##############################################################################
    <source>
      @type tail
      path "/var/log/containers/*_postgres-*.log"
      pos_file /var/log/postgres.log.pos
      tag postgres
      read_from_head true
      <parse>
        @type multiline
        format_firstline /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.?\d{0,9}[+-]\d{2}:\d{2} (stdout|stderr) . (\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.?\d{0,9} [^\s]+)/
        format1 /^(?<kubetime>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.?\d{0,9}[+-]\d{2}:\d{2}) (?<stream>stdout|stderr) . (?<time>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.?\d{0,9} [^\s]+) \[\d+\] (?<log>.+)/
        time_key time
        keep_time_key true
      </parse>
    </source>

    <filter postgres>
      @type record_transformer
      enable_ruby
      remove_keys kubetime
      <record>
        log ${record["log"].gsub(/\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.?\d{0,9}[+-]\d{2}:\d{2} (stdout|stderr) . /, "").strip}
      </record>
    </filter>

    <match postgres>
      @type s3
      aws_key_id "#{ENV['AWS_KEY_ID']}"
      aws_sec_key "#{ENV['AWS_SEC_KEY']}"
      check_apikey_on_start false
      s3_bucket "#{ENV['S3_BUCKET_NAME']}"
      s3_region ap-northeast-1
      s3_object_key_format "${tag[0]}-log/%{time_slice}/${tag[0]}-%{index}.log.%{file_extension}"
      time_slice_format %Y/%m/%d
      <buffer tag,time>
        @type file
        path "/var/log/fluentd-buffers/postgres/s3.buffer"
        timekey 3600
        timekey_wait 10m
        timekey_use_utc false
        timekey_zone Asia/Tokyo
        chunk_limit_size 1G
        flush_at_shutdown true
      </buffer>
    </match>

    ##############################################################################
    # Backend indexer container log configurations
    ##############################################################################
    <source>
      @type tail
      path "/var/log/containers/*_problem-indexer-*.log"
      pos_file /var/log/problem-indexer.log.pos
      tag indexer.problem
      read_from_head true
      <parse>
        @type regexp
        expression /^(?<kubetime>[^ ]*) (?<stream>stdout|stderr) . (?<log>.*)$/
      </parse>
    </source>

    <source>
      @type tail
      path "/var/log/containers/*_user-indexer-*.log"
      pos_file /var/log/user-indexer.log.pos
      tag indexer.user
      read_from_head true
      <parse>
        @type regexp
        expression /^(?<kubetime>[^ ]*) (?<stream>stdout|stderr) . (?<log>.*)$/
      </parse>
    </source>

    <source>
      @type tail
      path "/var/log/containers/*_submission-indexer-*.log"
      pos_file /var/log/submission-indexer.log.pos
      tag indexer.submission
      read_from_head true
      <parse>
        @type regexp
        expression /^(?<kubetime>[^ ]*) (?<stream>stdout|stderr) . (?<log>.*)$/
      </parse>
    </source>

    <filter indexer.*>
      @type record_transformer
      enable_ruby
      <record>
        log ${record["log"].strip}
      </record>
    </filter>

    <filter indexer.*>
      @type parser
      key_name log
      <parse>
        @type json
        time_key time
        time_format %Y-%m-%dT%H:%M:%S.%N%:z
        keep_time_key true
      </parse>
    </filter>

    <match indexer.*>
      @type s3
      format json
      aws_key_id "#{ENV['AWS_KEY_ID']}"
      aws_sec_key "#{ENV['AWS_SEC_KEY']}"
      check_apikey_on_start false
      s3_bucket "#{ENV['S3_BUCKET_NAME']}"
      s3_region ap-northeast-1
      s3_object_key_format "${tag[0]}-log/%{time_slice}/${tag[0]}-%{index}.log.%{file_extension}"
      time_slice_format %Y/%m/%d
      <buffer tag,time>
        @type file
        path "/var/log/fluentd-buffers/indexer/s3.buffer"
        timekey 3600
        timekey_wait 10m
        timekey_use_utc false
        timekey_zone Asia/Tokyo
        chunk_limit_size 1G
        flush_at_shutdown true
      </buffer>
    </match>

    ##############################################################################
    # Backend crawler container log configurations
    ##############################################################################
    <source>
      @type tail
      path "/var/log/containers/*_crawler-*.log"
      pos_file /var/log/crawler.log.pos
      tag crawler
      read_from_head true
      <parse>
        @type regexp
        expression /^(?<kubetime>[^ ]*) (?<stream>stdout|stderr) . (?<log>.*)$/
      </parse>
    </source>

    <filter crawler>
      @type record_transformer
      enable_ruby
      <record>
        log ${record["log"].strip}
      </record>
    </filter>

    <filter crawler>
      @type parser
      key_name log
      <parse>
        @type json
        time_key time
        time_format %Y-%m-%dT%H:%M:%S.%N%:z
        keep_time_key true
      </parse>
    </filter>

    <match crawler>
      @type s3
      format json
      aws_key_id "#{ENV['AWS_KEY_ID']}"
      aws_sec_key "#{ENV['AWS_SEC_KEY']}"
      check_apikey_on_start false
      s3_bucket "#{ENV['S3_BUCKET_NAME']}"
      s3_region ap-northeast-1
      s3_object_key_format "${tag[0]}-log/%{time_slice}/${tag[0]}-%{index}.log.%{file_extension}"
      time_slice_format %Y/%m/%d
      <buffer tag,time>
        @type file
        path "/var/log/fluentd-buffers/crawler/s3.buffer"
        timekey 3600
        timekey_wait 10m
        timekey_use_utc false
        timekey_zone Asia/Tokyo
        chunk_limit_size 1G
        flush_at_shutdown true
      </buffer>
    </match>

    ##############################################################################
    # Ingress Nginx controller log configurations
    ##############################################################################
    <source>
      @type tail
      path "/var/log/containers/nginx-ingress-microk8s-controller-*.log"
      pos_file /var/log/ingress.log.pos
      tag ingress
      read_from_head true
      <parse>
        @type regexp
        expression /^(?<kubetime>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.?\d{0,9}[+-]\d{2}:\d{2}) (?<stream>stdout|stderr) . (?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)") (?<length>[^ ]*) (?<elapsed>[^ ]*) \[(?<upstream>[^\]]*)\] \[(?<upstream_alt>[^\]]*)\] (?<upstream_addr>[^ ]*) (?<upstream_length>[^ ]*) (?<upstream_elapsed>[^ ]*) (?<upstream_code>[^ ]*) (?<req_id>[^ ]*)$/
        time_format %d/%b/%Y:%H:%M:%S %z
        time_key time
        keep_time_key true
      </parse>
    </source>

    <filter ingress>
      @type record_transformer
      remove_keys kubetime
    </filter>

    <match ingress>
      @type s3
      aws_key_id "#{ENV['AWS_KEY_ID']}"
      aws_sec_key "#{ENV['AWS_SEC_KEY']}"
      check_apikey_on_start false
      s3_bucket "#{ENV['S3_BUCKET_NAME']}"
      s3_region ap-northeast-1
      s3_object_key_format "${tag[0]}-log/%{time_slice}/${tag[0]}-%{index}.log.%{file_extension}"
      time_slice_format %Y/%m/%d
      <buffer tag,time>
        @type file
        path "/var/log/fluentd-buffers/ingress/s3.buffer"
        timekey 3600
        timekey_wait 10m
        timekey_use_utc false
        timekey_zone Asia/Tokyo
        chunk_limit_size 1G
        flush_at_shutdown true
      </buffer>
    </match>
