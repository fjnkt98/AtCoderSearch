// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// APICategoryGet implements GET /api/category operation.
	//
	// GET /api/category
	APICategoryGet(ctx context.Context) (*APICategoryGetOK, error)
	// APIContestGet implements GET /api/contest operation.
	//
	// GET /api/contest
	APIContestGet(ctx context.Context, params APIContestGetParams) (*APIContestGetOK, error)
	// APIHealthGet implements GET /api/health operation.
	//
	// GET /api/health
	APIHealthGet(ctx context.Context) (*APIHealthGetOK, error)
	// APILanguageGet implements GET /api/language operation.
	//
	// GET /api/language
	APILanguageGet(ctx context.Context, params APILanguageGetParams) (*APILanguageGetOK, error)
	// APIProblemGet implements GET /api/problem operation.
	//
	// GET /api/problem
	APIProblemGet(ctx context.Context, params APIProblemGetParams) (*APIProblemGetOK, error)
	// APIProblemPost implements POST /api/problem operation.
	//
	// POST /api/problem
	APIProblemPost(ctx context.Context, req *APIProblemPostReq) (*APIProblemPostOK, error)
	// APISubmissionPost implements POST /api/submission operation.
	//
	// POST /api/submission
	APISubmissionPost(ctx context.Context, req *APISubmissionPostReq) (*APISubmissionPostOK, error)
	// APIUserPost implements POST /api/user operation.
	//
	// POST /api/user
	APIUserPost(ctx context.Context, req *APIUserPostReq) (*APIUserPostOK, error)
	// NewError creates *ErrorResponseStatusCode from error returned by handler.
	//
	// Used for common default response.
	NewError(ctx context.Context, err error) *ErrorResponseStatusCode
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
