// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: atcodersearch/v1/atcodersearch.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Count struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Count int64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *Count) Reset() {
	*x = Count{}
	mi := &file_atcodersearch_v1_atcodersearch_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Count) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Count) ProtoMessage() {}

func (x *Count) ProtoReflect() protoreflect.Message {
	mi := &file_atcodersearch_v1_atcodersearch_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Count.ProtoReflect.Descriptor instead.
func (*Count) Descriptor() ([]byte, []int) {
	return file_atcodersearch_v1_atcodersearch_proto_rawDescGZIP(), []int{0}
}

func (x *Count) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Count) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type SearchByKeywordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit          *int64   `protobuf:"varint,1,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Page           *int64   `protobuf:"varint,2,opt,name=page,proto3,oneof" json:"page,omitempty"`
	Q              string   `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	Sorts          []string `protobuf:"bytes,4,rep,name=sorts,proto3" json:"sorts,omitempty"`
	Facets         []string `protobuf:"bytes,5,rep,name=facets,proto3" json:"facets,omitempty"`
	Categories     []string `protobuf:"bytes,6,rep,name=categories,proto3" json:"categories,omitempty"`
	DifficultyFrom *int64   `protobuf:"varint,7,opt,name=difficulty_from,json=difficultyFrom,proto3,oneof" json:"difficulty_from,omitempty"`
	DifficultyTo   *int64   `protobuf:"varint,8,opt,name=difficulty_to,json=difficultyTo,proto3,oneof" json:"difficulty_to,omitempty"`
	Colors         []string `protobuf:"bytes,9,rep,name=colors,proto3" json:"colors,omitempty"`
	Experimental   *bool    `protobuf:"varint,10,opt,name=experimental,proto3,oneof" json:"experimental,omitempty"`
}

func (x *SearchByKeywordRequest) Reset() {
	*x = SearchByKeywordRequest{}
	mi := &file_atcodersearch_v1_atcodersearch_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchByKeywordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchByKeywordRequest) ProtoMessage() {}

func (x *SearchByKeywordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_atcodersearch_v1_atcodersearch_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchByKeywordRequest.ProtoReflect.Descriptor instead.
func (*SearchByKeywordRequest) Descriptor() ([]byte, []int) {
	return file_atcodersearch_v1_atcodersearch_proto_rawDescGZIP(), []int{1}
}

func (x *SearchByKeywordRequest) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *SearchByKeywordRequest) GetPage() int64 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *SearchByKeywordRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *SearchByKeywordRequest) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *SearchByKeywordRequest) GetFacets() []string {
	if x != nil {
		return x.Facets
	}
	return nil
}

func (x *SearchByKeywordRequest) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *SearchByKeywordRequest) GetDifficultyFrom() int64 {
	if x != nil && x.DifficultyFrom != nil {
		return *x.DifficultyFrom
	}
	return 0
}

func (x *SearchByKeywordRequest) GetDifficultyTo() int64 {
	if x != nil && x.DifficultyTo != nil {
		return *x.DifficultyTo
	}
	return 0
}

func (x *SearchByKeywordRequest) GetColors() []string {
	if x != nil {
		return x.Colors
	}
	return nil
}

func (x *SearchByKeywordRequest) GetExperimental() bool {
	if x != nil && x.Experimental != nil {
		return *x.Experimental
	}
	return false
}

type SearchByKeywordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time  int64         `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Total int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Index int64         `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Count int64         `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	Pages int64         `protobuf:"varint,5,opt,name=pages,proto3" json:"pages,omitempty"`
	Items []*Problem    `protobuf:"bytes,6,rep,name=items,proto3" json:"items,omitempty"`
	Facet *ProblemFacet `protobuf:"bytes,7,opt,name=facet,proto3" json:"facet,omitempty"`
}

func (x *SearchByKeywordResponse) Reset() {
	*x = SearchByKeywordResponse{}
	mi := &file_atcodersearch_v1_atcodersearch_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchByKeywordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchByKeywordResponse) ProtoMessage() {}

func (x *SearchByKeywordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_atcodersearch_v1_atcodersearch_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchByKeywordResponse.ProtoReflect.Descriptor instead.
func (*SearchByKeywordResponse) Descriptor() ([]byte, []int) {
	return file_atcodersearch_v1_atcodersearch_proto_rawDescGZIP(), []int{2}
}

func (x *SearchByKeywordResponse) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *SearchByKeywordResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchByKeywordResponse) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SearchByKeywordResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SearchByKeywordResponse) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *SearchByKeywordResponse) GetItems() []*Problem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SearchByKeywordResponse) GetFacet() *ProblemFacet {
	if x != nil {
		return x.Facet
	}
	return nil
}

type ProblemFacet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Categories   []*Count `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
	Difficulties []*Count `protobuf:"bytes,2,rep,name=difficulties,proto3" json:"difficulties,omitempty"`
}

func (x *ProblemFacet) Reset() {
	*x = ProblemFacet{}
	mi := &file_atcodersearch_v1_atcodersearch_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProblemFacet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemFacet) ProtoMessage() {}

func (x *ProblemFacet) ProtoReflect() protoreflect.Message {
	mi := &file_atcodersearch_v1_atcodersearch_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemFacet.ProtoReflect.Descriptor instead.
func (*ProblemFacet) Descriptor() ([]byte, []int) {
	return file_atcodersearch_v1_atcodersearch_proto_rawDescGZIP(), []int{3}
}

func (x *ProblemFacet) GetCategories() []*Count {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *ProblemFacet) GetDifficulties() []*Count {
	if x != nil {
		return x.Difficulties
	}
	return nil
}

type Problem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId    string  `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	ProblemTitle string  `protobuf:"bytes,2,opt,name=problem_title,json=problemTitle,proto3" json:"problem_title,omitempty"`
	ProblemUrl   string  `protobuf:"bytes,3,opt,name=problem_url,json=problemUrl,proto3" json:"problem_url,omitempty"`
	ContestId    string  `protobuf:"bytes,4,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ContestTitle string  `protobuf:"bytes,5,opt,name=contest_title,json=contestTitle,proto3" json:"contest_title,omitempty"`
	ContestUrl   string  `protobuf:"bytes,6,opt,name=contest_url,json=contestUrl,proto3" json:"contest_url,omitempty"`
	Difficulty   *int64  `protobuf:"varint,7,opt,name=difficulty,proto3,oneof" json:"difficulty,omitempty"`
	Color        *string `protobuf:"bytes,8,opt,name=color,proto3,oneof" json:"color,omitempty"`
	StartAt      int64   `protobuf:"varint,9,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	Duration     int64   `protobuf:"varint,10,opt,name=duration,proto3" json:"duration,omitempty"`
	RateChange   string  `protobuf:"bytes,11,opt,name=rate_change,json=rateChange,proto3" json:"rate_change,omitempty"`
	Category     string  `protobuf:"bytes,12,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *Problem) Reset() {
	*x = Problem{}
	mi := &file_atcodersearch_v1_atcodersearch_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Problem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Problem) ProtoMessage() {}

func (x *Problem) ProtoReflect() protoreflect.Message {
	mi := &file_atcodersearch_v1_atcodersearch_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Problem.ProtoReflect.Descriptor instead.
func (*Problem) Descriptor() ([]byte, []int) {
	return file_atcodersearch_v1_atcodersearch_proto_rawDescGZIP(), []int{4}
}

func (x *Problem) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *Problem) GetProblemTitle() string {
	if x != nil {
		return x.ProblemTitle
	}
	return ""
}

func (x *Problem) GetProblemUrl() string {
	if x != nil {
		return x.ProblemUrl
	}
	return ""
}

func (x *Problem) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *Problem) GetContestTitle() string {
	if x != nil {
		return x.ContestTitle
	}
	return ""
}

func (x *Problem) GetContestUrl() string {
	if x != nil {
		return x.ContestUrl
	}
	return ""
}

func (x *Problem) GetDifficulty() int64 {
	if x != nil && x.Difficulty != nil {
		return *x.Difficulty
	}
	return 0
}

func (x *Problem) GetColor() string {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return ""
}

func (x *Problem) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *Problem) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Problem) GetRateChange() string {
	if x != nil {
		return x.RateChange
	}
	return ""
}

func (x *Problem) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

var File_atcodersearch_v1_atcodersearch_proto protoreflect.FileDescriptor

var file_atcodersearch_v1_atcodersearch_proto_rawDesc = []byte{
	0x0a, 0x24, 0x61, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x61, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x22, 0x33, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8b, 0x03,
	0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x0c, 0x0a, 0x01,
	0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f,
	0x72, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x63, 0x65, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x61, 0x63, 0x65, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x0f, 0x64, 0x69, 0x66, 0x66,
	0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x02, 0x52, 0x0e, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x46,
	0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63,
	0x75, 0x6c, 0x74, 0x79, 0x5f, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52,
	0x0c, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x54, 0x6f, 0x88, 0x01, 0x01,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x04,
	0x52, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75,
	0x6c, 0x74, 0x79, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x64, 0x69, 0x66,
	0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x5f, 0x74, 0x6f, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x65,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x22, 0xec, 0x01, 0x0a, 0x17,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x66, 0x61, 0x63, 0x65, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x46, 0x61,
	0x63, 0x65, 0x74, 0x52, 0x05, 0x66, 0x61, 0x63, 0x65, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x0c, 0x50,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x46, 0x61, 0x63, 0x65, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x61, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0c, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x72, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x0c, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x69, 0x65,
	0x73, 0x22, 0xa0, 0x03, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x55,
	0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69,
	0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0a, 0x64,
	0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x32, 0x78, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x42, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x28, 0x2e, 0x61, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x72, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x4b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x20,
	0x5a, 0x1e, 0x66, 0x6a, 0x6e, 0x6b, 0x74, 0x39, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x72, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_atcodersearch_v1_atcodersearch_proto_rawDescOnce sync.Once
	file_atcodersearch_v1_atcodersearch_proto_rawDescData = file_atcodersearch_v1_atcodersearch_proto_rawDesc
)

func file_atcodersearch_v1_atcodersearch_proto_rawDescGZIP() []byte {
	file_atcodersearch_v1_atcodersearch_proto_rawDescOnce.Do(func() {
		file_atcodersearch_v1_atcodersearch_proto_rawDescData = protoimpl.X.CompressGZIP(file_atcodersearch_v1_atcodersearch_proto_rawDescData)
	})
	return file_atcodersearch_v1_atcodersearch_proto_rawDescData
}

var file_atcodersearch_v1_atcodersearch_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_atcodersearch_v1_atcodersearch_proto_goTypes = []any{
	(*Count)(nil),                   // 0: atcodersearch.v1.Count
	(*SearchByKeywordRequest)(nil),  // 1: atcodersearch.v1.SearchByKeywordRequest
	(*SearchByKeywordResponse)(nil), // 2: atcodersearch.v1.SearchByKeywordResponse
	(*ProblemFacet)(nil),            // 3: atcodersearch.v1.ProblemFacet
	(*Problem)(nil),                 // 4: atcodersearch.v1.Problem
}
var file_atcodersearch_v1_atcodersearch_proto_depIdxs = []int32{
	4, // 0: atcodersearch.v1.SearchByKeywordResponse.items:type_name -> atcodersearch.v1.Problem
	3, // 1: atcodersearch.v1.SearchByKeywordResponse.facet:type_name -> atcodersearch.v1.ProblemFacet
	0, // 2: atcodersearch.v1.ProblemFacet.categories:type_name -> atcodersearch.v1.Count
	0, // 3: atcodersearch.v1.ProblemFacet.difficulties:type_name -> atcodersearch.v1.Count
	1, // 4: atcodersearch.v1.ProblemService.SearchByKeyword:input_type -> atcodersearch.v1.SearchByKeywordRequest
	2, // 5: atcodersearch.v1.ProblemService.SearchByKeyword:output_type -> atcodersearch.v1.SearchByKeywordResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_atcodersearch_v1_atcodersearch_proto_init() }
func file_atcodersearch_v1_atcodersearch_proto_init() {
	if File_atcodersearch_v1_atcodersearch_proto != nil {
		return
	}
	file_atcodersearch_v1_atcodersearch_proto_msgTypes[1].OneofWrappers = []any{}
	file_atcodersearch_v1_atcodersearch_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_atcodersearch_v1_atcodersearch_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_atcodersearch_v1_atcodersearch_proto_goTypes,
		DependencyIndexes: file_atcodersearch_v1_atcodersearch_proto_depIdxs,
		MessageInfos:      file_atcodersearch_v1_atcodersearch_proto_msgTypes,
	}.Build()
	File_atcodersearch_v1_atcodersearch_proto = out.File
	file_atcodersearch_v1_atcodersearch_proto_rawDesc = nil
	file_atcodersearch_v1_atcodersearch_proto_goTypes = nil
	file_atcodersearch_v1_atcodersearch_proto_depIdxs = nil
}
