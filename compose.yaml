services:
  api-server:
    build:
      context: ./backend/server
      dockerfile: Dockerfile
    container_name: atcoder-search-api-server
    ports:
      - "8000:8000"
    environment:
      - API_SERVER_LISTEN_PORT=8000
      - CORE_NAME=atcoder
      - LOG_DIRECTORY=/var/log
      - SOLR_HOST=http://solr
      - SOLR_PORT=8983
      - RUST_LOG=debug
      - FRONTEND_ORIGIN_URL=http://localhost
    depends_on:
      solr:
        condition: service_healthy
    networks:
      - atcoder
    healthcheck:
      test: ["CMD", "curl", "-sS", "http://localhost:8000/api/healthcheck"]
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 10s

  indexer:
    build:
      context: ./backend/indexer
      dockerfile: Dockerfile
    container_name: atcoder-search-indexer
    environment:
      - PGUSER=atcoder
      - PGHOST=postgresql
      - PGPORT=5432
      - PGDATABASE=atcoder
      - DATABASE_URL=postgres://atcoder:atcoder@postgresql:5432/atcoder
      - CORE_NAME=atcoder
      - SOLR_HOST=http://solr
      - SOLR_PORT=8983
      - RUST_LOG=info
      - DOCUMENT_SAVE_DIRECTORY=/var/tmp
    depends_on:
      solr:
        condition: service_healthy
      postgresql:
        condition: service_healthy
    command: bash -c 'indexer generate && indexer post --optimize'
    networks:
      - atcoder
      
  solr:
    build:
      context: ./middlewares/solr
      dockerfile: Dockerfile
    container_name: atcoder-search-solr
    ports:
      - "8983:8983"
    networks:
      - atcoder
    healthcheck:
      test: ["CMD", "curl", "-sS", "http://localhost:8983/solr/atcoder/admin/ping"]
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 10s

  postgresql:
    image: postgres:15
    container_name: atcoder-search-postgresql
    environment:
      - POSTGRES_DB=atcoder
      - POSTGRES_USER=atcoder
      - POSTGRES_PASSWORD=atcoder
    ports:
      - "5432:5432"
    networks:
      - atcoder
    volumes:
      - type: bind
        source: ./dump.atcoder.sql
        target: /docker-entrypoint-initdb.d/dump.atcoder.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "atcoder"]
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 10s

  nginx:
    build:
      context: .
      dockerfile: middlewares/nginx/Dockerfile
      args:
        - API_HOST=http://localhost:8000
    container_name: atcoder-search-web-server
    ports:
      - "80:80"
    environment:
      - API_HOST=http://api-server:8000
    networks:
      - atcoder
    depends_on:
      api-server:
        condition: service_healthy
  
networks:
  atcoder:
